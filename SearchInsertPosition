package com.leetcode.assessment;

public class SearchInsertPosition {

	public static void main(String[] args) {
		int nums[] = new int[] { 1, 3, 5, 8};
		int target = 9;
		System.out.println(searchInsert(nums, target));
	}

	public static int searchInsert(int[] nums, int target) {
		// for the sorted array
		// use BST apprach

		// check edges first
		if (nums == null || nums.length == 0) {
			return 0;
		}

		return findIndex(0, nums.length, nums, target);
	}

	private static int findIndex(int start, int end, int[] nums, int target) {
		// get midIndex and compare arrayValue with target
		int mid = (start + end) / 2;
		System.out.println("mid :" + mid + " start: " + start + " end: " + end);
		if ((start == end || start == mid || mid == start) && nums[mid] != target) {
			if (target < nums[mid])
				return start;
			else
				return end;
		}

		if (target == nums[mid])
			return mid;
		else if (target < nums[mid]) {
			return findIndex(start, mid, nums, target);
		} else {
			return findIndex(mid, end, nums, target);
		}
	}
}
